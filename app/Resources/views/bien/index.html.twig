{% extends 'base_new.html.twig' %}
{% set ht = "" %}
{% block body %}

	<h1>Listado de bienes MIGyD
		<h3>
			{% with {'pdfp': false}%}
			{{ block("tableBlockBien", "./bien/tableBlockBien.twig") }}
			{% endwith %}
			<ul>
				<div class="btn-group" role="group" aria-label="Basic outlined example">

					<a href="{{ path('bien_new') }}" class="btn btn-outline-primary">
						Alta nuevo bien
					</a>
					<a href="{{ path('bienes_homepage') }}" class="btn btn-outline-primary">
						Volver al menú principal
					</a>
					<a id="generarPdf" href="{{ path('pdf_bien', {"filtro": "cx", "campo": "getDescripcion" }) }}" class="btn btn-outline-primary">
						Generar PDF
					</a>
				</div>
			</ul>
		</h3>

		<script>
			// --------------------------------------------------------------
// search box
let input = document.getElementById('searchbox');

/* let gg = document.getElementById('generarPdf');
gg.addEventListener('click', (e) => {
gg.href = "/~hugo/inventario_bienes…_bien/hp/getDescripcion";
} */


// transforma HTMLCollection en Array
let rowsData = Array.prototype.slice.call(document.getElementById("tableData").rows);


input.addEventListener('input', (e) => {
let value = e.target.value.toUpperCase()
let matcher = new RegExp (`^${value}`, 'g');

let checkDescription = document.getElementById('descripcion').checked;
let checkUsuario = document.getElementById('usuario').checked;
let checkLugar = document.getElementById('lugar').checked;

// operador map como bucle for para recorrer todas las rows
rowsData.map((row) => {
let description = row.cells[3].innerHTML.toUpperCase()
let usuario = row.cells[2].innerHTML.toUpperCase()
let lugar = row.cells[4].innerHTML.toUpperCase()

if (checkDescription && description.match(matcher) || (checkUsuario && usuario.match(matcher)) || (checkLugar && lugar.match(matcher))) {
row.style.display = "table-row"
} else 
row.style.display = "none"





})
});
		</script>
	{% endblock %}
