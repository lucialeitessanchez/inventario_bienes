-- MySQL Script generated by MySQL Workbench
-- mar 09 ago 2022 14:48:19
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema inventario_bienesv2
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `localidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `localidad` (
  `id` INT NOT NULL,
  `cod_pcia` INT NOT NULL,
  `nom_pcia` VARCHAR(45) NOT NULL,
  `cod_dpto` INT NOT NULL,
  `nom_dpto` VARCHAR(45) NOT NULL,
  `cod_ase` VARCHAR(10) NOT NULL COMMENT 'este es el codigo que se guarda',
  `nombre` VARCHAR(45) NULL,
  `cod_agl` VARCHAR(45) NOT NULL,
  `nomb_agl` VARCHAR(45) NOT NULL COMMENT 'aca esta nombre de la localidad',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `proveedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proveedor` (
  `id_proveedor` INT NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `cuil` VARCHAR(45) NULL,
  `direccion` VARCHAR(255) NULL,
  `telefono` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `organismo_publico` VARCHAR(45) NOT NULL,
  `localidad_id` INT NOT NULL,
  `fecha_baja` VARCHAR(45) NULL COMMENT 'baja por error de carga',
  PRIMARY KEY (`id_proveedor`),
  INDEX `fk_proveedor_localidad1_idx` (`localidad_id` ASC) VISIBLE,
  CONSTRAINT `fk_proveedor_localidad1`
    FOREIGN KEY (`localidad_id`)
    REFERENCES `localidad` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cabecera_factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cabecera_factura` (
  `id_cabecera_factura` INT NOT NULL,
  `nro_factura` VARCHAR(45) NULL,
  `fecha_factura` DATE NOT NULL,
  `importe_total` VARCHAR(45) NULL,
  `observacion` VARCHAR(45) NULL,
  `proveedor_id_proveedor` INT NOT NULL,
  `usuario_alta` VARCHAR(45) NOT NULL,
  `fecha_alta` DATETIME NOT NULL,
  `fecha_baja` DATETIME NULL COMMENT 'baja por error de carga',
  PRIMARY KEY (`id_cabecera_factura`),
  INDEX `fk_cabecera_factura_proveedor1_idx` (`proveedor_id_proveedor` ASC) VISIBLE,
  CONSTRAINT `fk_cabecera_factura_proveedor1`
    FOREIGN KEY (`proveedor_id_proveedor`)
    REFERENCES `proveedor` (`id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipo` (
  `id_tipo` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo` VARCHAR(45) NOT NULL,
  `clasificacion` ENUM('BI', 'BU') NOT NULL,
  PRIMARY KEY (`id_tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rama`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rama` (
  `id_rama` INT NOT NULL,
  `rama` VARCHAR(45) NULL,
  `unidad_medida` VARCHAR(45) NOT NULL,
  `sub_clasificacion` ENUM('Insumo informatico', 'Consumible') NULL,
  `tipo_id_tipo` INT NOT NULL,
  PRIMARY KEY (`id_rama`),
  INDEX `fk_rama_tipo1_idx` (`tipo_id_tipo` ASC) VISIBLE,
  CONSTRAINT `fk_rama_tipo1`
    FOREIGN KEY (`tipo_id_tipo`)
    REFERENCES `tipo` (`id_tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipo_adquisicion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipo_adquisicion` (
  `idtipo_adquisicion` INT NOT NULL AUTO_INCREMENT,
  `tipo_adquisicion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idtipo_adquisicion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bien`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bien` (
  `id_bien` INT NOT NULL AUTO_INCREMENT,
  `fecha_adquisicion` DATE NOT NULL,
  `codigo` VARCHAR(45) NOT NULL COMMENT 'codico unico generado por sistema',
  `nro_serie` VARCHAR(45) NULL,
  `nro_sari` INT NULL,
  `nro_imei` VARCHAR(45) NULL,
  `marca` VARCHAR(100) NULL,
  `modelo` VARCHAR(45) NULL,
  `estado` VARCHAR(100) NULL COMMENT 'refiere a la condicion del bien de uso al momento de la adquisicion (Nuevo - Usado - Buen estado - Mal estado)\n',
  `color` VARCHAR(45) NULL,
  `descripcion_observacion` VARCHAR(255) NULL COMMENT 'alguna caracteristica mas del bien adquirido',
  `nro_licitacion` VARCHAR(45) NULL,
  `expte_licitacion` VARCHAR(45) NULL,
  `nro_resolucion_comLicitacion` VARCHAR(45) NULL,
  `nro_gestion_directa` VARCHAR(45) NULL,
  `expte_gestion_directa` VARCHAR(45) NULL,
  `nro_resolucion_compDirecta` VARCHAR(45) NULL,
  `ultimo_id_movimiento` INT NOT NULL,
  `observacion` VARCHAR(45) NULL,
  `usuario_alta` VARCHAR(45) NOT NULL,
  `fecha_alta` DATETIME NULL,
  `fecha_baja` DATETIME NULL COMMENT 'baja solo por error de carga',
  `cabecera_factura_id_cabecera_factura` INT NULL,
  `rama_id_rama` INT NOT NULL,
  `tipo_adquisicion_idtipo_adquisicion` INT NOT NULL,
  `proveedor_id_proveedor` INT NOT NULL,
  `ultimo_id_movimiento` INT NOT NULL,
  PRIMARY KEY (`id_bien`),
  INDEX `fk_bien_cabecera_factura1_idx` (`cabecera_factura_id_cabecera_factura` ASC) VISIBLE,
  INDEX `fk_bien_rama1_idx` (`rama_id_rama` ASC) VISIBLE,
  INDEX `fk_bien_tipo_adquisicion1_idx` (`tipo_adquisicion_idtipo_adquisicion` ASC) VISIBLE,
  INDEX `fk_bien_proveedor1_idx` (`proveedor_id_proveedor` ASC) VISIBLE,
  CONSTRAINT `fk_bien_cabecera_factura1`
    FOREIGN KEY (`cabecera_factura_id_cabecera_factura`)
    REFERENCES `cabecera_factura` (`id_cabecera_factura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bien_rama1`
    FOREIGN KEY (`rama_id_rama`)
    REFERENCES `rama` (`id_rama`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bien_tipo_adquisicion1`
    FOREIGN KEY (`tipo_adquisicion_idtipo_adquisicion`)
    REFERENCES `tipo_adquisicion` (`idtipo_adquisicion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bien_proveedor1`
    FOREIGN KEY (`proveedor_id_proveedor`)
    REFERENCES `proveedor` (`id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `detalle_factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `detalle_factura` (
  `id_detalle_factura` INT NOT NULL,
  `descripcion` VARCHAR(255) NOT NULL,
  `importe_unitario` VARCHAR(45) NOT NULL,
  `cantidad` INT NOT NULL,
  `observacion` VARCHAR(200) NULL,
  `cabecera_factura_id_cabecera_factura` INT NOT NULL,
  `fecha_baja` DATETIME NULL COMMENT 'baja por error de carga',
  PRIMARY KEY (`id_detalle_factura`),
  INDEX `fk_detalle_factura_cabecera_factura_idx` (`cabecera_factura_id_cabecera_factura` ASC) VISIBLE,
  CONSTRAINT `fk_detalle_factura_cabecera_factura`
    FOREIGN KEY (`cabecera_factura_id_cabecera_factura`)
    REFERENCES `cabecera_factura` (`id_cabecera_factura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipo_movimiento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipo_movimiento` (
  `idtipo_movimiento` INT NOT NULL AUTO_INCREMENT,
  `movimiento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idtipo_movimiento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `responsable_area`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `responsable_area` (
  `id_responsable_area` INT NOT NULL,
  `responsable_id_responsable` VARCHAR(45) NOT NULL,
  `area` VARCHAR(45) NOT NULL,
  `cargo` VARCHAR(45) NOT NULL,
  `fecha_baja` DATETIME NULL,
  PRIMARY KEY (`id_responsable_area`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ubicacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ubicacion` (
  `id_ubicacion` INT NOT NULL,
  `calle` VARCHAR(45) NULL,
  `nro_` VARCHAR(45) NOT NULL,
  `observacion` VARCHAR(45) NOT NULL,
  `localidad_id` INT NOT NULL,
  PRIMARY KEY (`id_ubicacion`),
  INDEX `fk_ubicacion_localidad1_idx` (`localidad_id` ASC) VISIBLE,
  CONSTRAINT `fk_ubicacion_localidad1`
    FOREIGN KEY (`localidad_id`)
    REFERENCES `localidad` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oficina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina` (
  `id_oficina` INT NOT NULL,
  `nombre_oficina` VARCHAR(45) NOT NULL,
  `ubicacion_id_ubicacion` INT NOT NULL,
  `id_area` INT NULL,
  PRIMARY KEY (`id_oficina`),
  INDEX `fk_oficina_ubicacion1_idx` (`ubicacion_id_ubicacion` ASC) VISIBLE,
  CONSTRAINT `fk_oficina_ubicacion1`
    FOREIGN KEY (`ubicacion_id_ubicacion`)
    REFERENCES `ubicacion` (`id_ubicacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `responsable`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `responsable` (
  `id_responsable` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `dni` INT NULL,
  `funcionario` TINYINT NOT NULL,
  `cargo` VARCHAR(45) NULL,
  `responsable_area_id_responsable_area` INT NOT NULL,
  `oficina_id_oficina` INT NOT NULL,
  `fecha_baja` DATETIME NULL,
  PRIMARY KEY (`id_responsable`),
  INDEX `fk_responsable_responsable_area1_idx` (`responsable_area_id_responsable_area` ASC) VISIBLE,
  INDEX `fk_responsable_oficina1_idx` (`oficina_id_oficina` ASC) VISIBLE,
  CONSTRAINT `fk_responsable_responsable_area1`
    FOREIGN KEY (`responsable_area_id_responsable_area`)
    REFERENCES `responsable_area` (`id_responsable_area`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_responsable_oficina1`
    FOREIGN KEY (`oficina_id_oficina`)
    REFERENCES `oficina` (`id_oficina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movimiento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movimiento` (
  `id_movimiento` INT NOT NULL,
  `fecha_movimiento` DATE NOT NULL,
  `tipo_movimiento_idtipo_movimiento` INT NOT NULL,
  `bien_id_bien` INT NOT NULL,
  `oficina_id_oficina` INT NOT NULL,
  `ubicacion_id_ubicacion` INT NOT NULL,
  `estado_bien` ENUM('ACTIVO', 'INACTIVO', 'BAJA') NOT NULL COMMENT 'es el estado que esta en rama',
  `observacion` VARCHAR(255) NULL,
  `usuario_alta` VARCHAR(45) NOT NULL,
  `fecha_alta` DATETIME NOT NULL,
  `fecha_baja` DATETIME NULL COMMENT 'baja solo por error de carga',
  `responsable_id_responsable_func` INT NULL,
  `responsable_id_responsable_planta` INT NULL,
  PRIMARY KEY (`id_movimiento`),
  INDEX `fk_movimiento_tipo_movimiento1_idx` (`tipo_movimiento_idtipo_movimiento` ASC) VISIBLE,
  INDEX `fk_movimiento_bien1_idx` (`bien_id_bien` ASC) VISIBLE,
  INDEX `fk_movimiento_responsable1_idx` (`responsable_id_responsable_func` ASC) VISIBLE,
  INDEX `fk_movimiento_responsable2_idx` (`responsable_id_responsable_planta` ASC) VISIBLE,
  CONSTRAINT `fk_movimiento_tipo_movimiento1`
    FOREIGN KEY (`tipo_movimiento_idtipo_movimiento`)
    REFERENCES `tipo_movimiento` (`idtipo_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movimiento_bien1`
    FOREIGN KEY (`bien_id_bien`)
    REFERENCES `bien` (`id_bien`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movimiento_responsable1`
    FOREIGN KEY (`responsable_id_responsable_func`)
    REFERENCES `responsable` (`id_responsable`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movimiento_responsable2`
    FOREIGN KEY (`responsable_id_responsable_planta`)
    REFERENCES `responsable` (`id_responsable`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `asignacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asignacion` (
  `idasignacion` INT NOT NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  `apenom_quien_entrego` VARCHAR(45) NOT NULL,
  `apenom_receptor_firmante` VARCHAR(45) NULL,
  `observacion` VARCHAR(45) NULL,
  `fecha_baja` DATETIME NULL COMMENT 'bajas solo por error de carga',
  PRIMARY KEY (`idasignacion`),
  INDEX `fk_asignacion_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  CONSTRAINT `fk_asignacion_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prestamo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prestamo` (
  `id_prestamo` INT NOT NULL,
  `movimiento_id_movimiento` INT NOT NULL COMMENT 'numero comprobante de prestamo',
  `fecha_prestamo` DATE NOT NULL,
  `fecha_estimada_devolucion` DATE NOT NULL,
  `condicion_bi_prestado` VARCHAR(255) NULL,
  `apenom_quien_entrego` VARCHAR(55) NOT NULL,
  `apenom_receptor_firmante` VARCHAR(45) NULL,
  `observacion` VARCHAR(255) NULL,
  `fecha_baja` DATETIME NULL COMMENT 'solo para error de carga',
  INDEX `fk_prestamo_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  PRIMARY KEY (`id_prestamo`),
  CONSTRAINT `fk_prestamo_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bi_desuso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bi_desuso` (
  `id_bi_desuso` INT NOT NULL,
  `fecha_desuso` DATE NOT NULL,
  `diagnostico` VARCHAR(255) NOT NULL COMMENT 'descripcion del diagnostico y el motivo de que se declare en desuso',
  `apenom_responsable_diagnostico` VARCHAR(255) NOT NULL,
  `observacion` VARCHAR(255) NULL,
  `apenom_receptor_firmante` VARCHAR(100) NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  `fecha_baja` DATETIME NULL COMMENT 'solo por error de carga',
  PRIMARY KEY (`id_bi_desuso`),
  INDEX `fk_bi_desuso_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  CONSTRAINT `fk_bi_desuso_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bi_inactivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bi_inactivo` (
  `id_bi_inactivo` INT NOT NULL,
  `motivo` VARCHAR(45) NOT NULL,
  `responsable_indica_cambio` VARCHAR(45) NOT NULL,
  `responsable_superior_firmante` VARCHAR(45) NULL,
  `observacion` VARCHAR(255) NULL,
  `movimiento_id_movimiento` DATETIME NOT NULL,
  `fecha_baja` VARCHAR(45) NULL COMMENT 'solo por error de carga',
  PRIMARY KEY (`id_bi_inactivo`),
  INDEX `fk_bi_inactivo_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  CONSTRAINT `fk_bi_inactivo_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bi_activo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bi_activo` (
  `id_bi_activo` INT NOT NULL,
  `motivo` VARCHAR(255) NOT NULL,
  `responsable_indica_cambio` VARCHAR(45) NOT NULL,
  `responsable_superior_firmante` VARCHAR(255) NULL,
  `observacion` VARCHAR(255) NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  `bi_inactivo_id_bi_inactivo` INT NOT NULL,
  PRIMARY KEY (`id_bi_activo`),
  INDEX `fk_bi_activo_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  INDEX `fk_bi_activo_bi_inactivo1_idx` (`bi_inactivo_id_bi_inactivo` ASC) VISIBLE,
  CONSTRAINT `fk_bi_activo_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bi_activo_bi_inactivo1`
    FOREIGN KEY (`bi_inactivo_id_bi_inactivo`)
    REFERENCES `bi_inactivo` (`id_bi_inactivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bi_baja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bi_baja` (
  `id_bi_baja` INT NOT NULL,
  `fecha_baja` DATE NOT NULL,
  `motivo` VARCHAR(45) NULL,
  `responsable_indica_baja` VARCHAR(45) NULL,
  `fecha_form_stg` DATE NULL,
  `observacion` VARCHAR(255) NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  PRIMARY KEY (`id_bi_baja`),
  INDEX `fk_bi_baja_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  CONSTRAINT `fk_bi_baja_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuario` (
  `id_usuario` VARCHAR(45) NOT NULL,
  `apenom_usuario` VARCHAR(100) NOT NULL,
  `observacion` VARCHAR(255) NULL,
  `fecha_baja` DATETIME NULL COMMENT 'baja solo por error de carga',
  `movimiento_id_movimiento` INT NOT NULL,
  INDEX `fk_usuario_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  PRIMARY KEY (`id_usuario`),
  CONSTRAINT `fk_usuario_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `devolucion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `devolucion` (
  `iddevolucion` INT NOT NULL COMMENT 'nro comprobante de devolucion',
  `fecha_devolucion` DATE NOT NULL,
  `condicion_bi_devuelto` VARCHAR(255) NULL,
  `observacion` VARCHAR(255) NULL,
  `apenom_quien_devuelve` VARCHAR(45) NULL,
  `apenom_receptor_firmante` VARCHAR(45) NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  `prestamo_id_prestamo` INT NOT NULL,
  `fecha_baja` DATE NULL COMMENT 'solo por error de carga',
  PRIMARY KEY (`iddevolucion`),
  INDEX `fk_devolucion_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  INDEX `fk_devolucion_prestamo1_idx` (`prestamo_id_prestamo` ASC) VISIBLE,
  CONSTRAINT `fk_devolucion_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_devolucion_prestamo1`
    FOREIGN KEY (`prestamo_id_prestamo`)
    REFERENCES `prestamo` (`id_prestamo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bi_daniado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bi_daniado` (
  `id_bi_daniado` INT NOT NULL,
  `fecha_retiro` DATE NOT NULL,
  `apenom_responsable_retiro` VARCHAR(45) NULL,
  `apenom_responsable_entrega` VARCHAR(45) NULL,
  `danio_detectado` VARCHAR(255) NOT NULL,
  `observacion` VARCHAR(255) NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  `fecha_baja` DATETIME NULL COMMENT 'solo por error de carga',
  PRIMARY KEY (`id_bi_daniado`),
  INDEX `fk_bi_daniado_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  CONSTRAINT `fk_bi_daniado_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `reparador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `reparador` (
  `id_reparador` INT NOT NULL,
  `reparador` VARCHAR(45) NOT NULL,
  `domicilio reparador` VARCHAR(45) NOT NULL,
  `contacto_reparador` VARCHAR(45) NOT NULL,
  `telefono_reparador` VARCHAR(45) NULL,
  `email_reparador` VARCHAR(45) NULL,
  PRIMARY KEY (`id_reparador`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `envio_reparacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `envio_reparacion` (
  `id_envio_reparacion` INT NOT NULL,
  `fecha_envio` DATE NULL,
  `tipo_reparacion` ENUM('GARANTIA', 'DIRECTA') NOT NULL,
  `reparador` INT NOT NULL,
  `fecha_estimada_devolucion` DATE NULL,
  `domicilio reparador` VARCHAR(45) NULL,
  `contacto_reparador` VARCHAR(45) NOT NULL COMMENT 'nombre o dato de con quien comunicarse',
  `telefono` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `observacion` VARCHAR(255) NULL,
  `fecha_baja` DATETIME NULL COMMENT 'solo por error de carga',
  `movimiento_id_movimiento` INT NOT NULL,
  `bi_daniado_id_bi_daniado` INT NOT NULL,
  `reparador_id_reparador` INT NOT NULL,
  PRIMARY KEY (`id_envio_reparacion`),
  INDEX `fk_envio_reparacion_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  INDEX `fk_envio_reparacion_bi_daniado1_idx` (`bi_daniado_id_bi_daniado` ASC) VISIBLE,
  INDEX `fk_envio_reparacion_reparador1_idx` (`reparador_id_reparador` ASC) VISIBLE,
  CONSTRAINT `fk_envio_reparacion_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_envio_reparacion_bi_daniado1`
    FOREIGN KEY (`bi_daniado_id_bi_daniado`)
    REFERENCES `bi_daniado` (`id_bi_daniado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_envio_reparacion_reparador1`
    FOREIGN KEY (`reparador_id_reparador`)
    REFERENCES `reparador` (`id_reparador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `devolucion_reparador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `devolucion_reparador` (
  `id_devolucion_reparador` INT NOT NULL,
  `condicion` ENUM('REPARADO', 'NO REPARADO') NOT NULL,
  `fecha_devolucion` DATE NOT NULL,
  `apenom_receptor` VARCHAR(255) NOT NULL,
  `observacion` VARCHAR(255) NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  `envio_reparacion_id_envio_reparacion` INT NOT NULL,
  PRIMARY KEY (`id_devolucion_reparador`),
  INDEX `fk_devolucion_reparador_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  INDEX `fk_devolucion_reparador_envio_reparacion1_idx` (`envio_reparacion_id_envio_reparacion` ASC) VISIBLE,
  CONSTRAINT `fk_devolucion_reparador_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_devolucion_reparador_envio_reparacion1`
    FOREIGN KEY (`envio_reparacion_id_envio_reparacion`)
    REFERENCES `envio_reparacion` (`id_envio_reparacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `retorno_bi_reparado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `retorno_bi_reparado` (
  `id_retorno_bi_reparado` INT NOT NULL COMMENT 'nro de comprobante bi reparado',
  `fecha_retorno` DATE NOT NULL,
  `apenom_responsable_entrega` VARCHAR(45) NULL,
  `apenom_receptor_firmante` VARCHAR(45) NULL,
  `observacion` VARCHAR(255) NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  `bi_daniado_id_bi_daniado` INT NOT NULL,
  `fecha_baja` DATE NULL COMMENT 'solo por error de carga',
  PRIMARY KEY (`id_retorno_bi_reparado`),
  INDEX `fk_retorno_bi_reparado_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  INDEX `fk_retorno_bi_reparado_bi_daniado1_idx` (`bi_daniado_id_bi_daniado` ASC) VISIBLE,
  CONSTRAINT `fk_retorno_bi_reparado_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_retorno_bi_reparado_bi_daniado1`
    FOREIGN KEY (`bi_daniado_id_bi_daniado`)
    REFERENCES `bi_daniado` (`id_bi_daniado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bi_inactivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bi_inactivo` (
  `id_bi_inactivo` INT NOT NULL,
  `motivo` VARCHAR(45) NOT NULL,
  `responsable_indica_cambio` VARCHAR(45) NOT NULL,
  `responsable_superior_firmante` VARCHAR(45) NULL,
  `observacion` VARCHAR(255) NULL,
  `movimiento_id_movimiento` DATETIME NOT NULL,
  `fecha_baja` VARCHAR(45) NULL COMMENT 'solo por error de carga',
  PRIMARY KEY (`id_bi_inactivo`),
  INDEX `fk_bi_inactivo_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  CONSTRAINT `fk_bi_inactivo_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bi_activo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bi_activo` (
  `id_bi_activo` INT NOT NULL,
  `motivo` VARCHAR(255) NOT NULL,
  `responsable_indica_cambio` VARCHAR(45) NOT NULL,
  `responsable_superior_firmante` VARCHAR(255) NULL,
  `observacion` VARCHAR(255) NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  `bi_inactivo_id_bi_inactivo` INT NOT NULL,
  PRIMARY KEY (`id_bi_activo`),
  INDEX `fk_bi_activo_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  INDEX `fk_bi_activo_bi_inactivo1_idx` (`bi_inactivo_id_bi_inactivo` ASC) VISIBLE,
  CONSTRAINT `fk_bi_activo_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bi_activo_bi_inactivo1`
    FOREIGN KEY (`bi_inactivo_id_bi_inactivo`)
    REFERENCES `bi_inactivo` (`id_bi_inactivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bi_baja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bi_baja` (
  `id_bi_baja` INT NOT NULL,
  `fecha_baja` DATE NOT NULL,
  `motivo` VARCHAR(45) NULL,
  `responsable_indica_baja` VARCHAR(45) NULL,
  `fecha_form_stg` DATE NULL,
  `observacion` VARCHAR(255) NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  PRIMARY KEY (`id_bi_baja`),
  INDEX `fk_bi_baja_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  CONSTRAINT `fk_bi_baja_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingreso_stock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ingreso_stock` (
  `id_ingreso_stock` INT NOT NULL,
  `fecha_ingreso` DATE NOT NULL,
  `cantidad_ingreso` DOUBLE NOT NULL,
  `observacion` VARCHAR(255) NULL,
  `fecha_alta` DATETIME NOT NULL,
  `usuario_alta` VARCHAR(45) NOT NULL,
  `fecha_baja` DATETIME NULL COMMENT 'solo por error de carga',
  `rama_id_rama` INT NOT NULL,
  PRIMARY KEY (`id_ingreso_stock`),
  INDEX `fk_ingreso_stock_rama1_idx` (`rama_id_rama` ASC) VISIBLE,
  CONSTRAINT `fk_ingreso_stock_rama1`
    FOREIGN KEY (`rama_id_rama`)
    REFERENCES `rama` (`id_rama`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `egreso_stock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `egreso_stock` (
  `id_egreso_stock` INT NOT NULL,
  `fecha_egreso` DATE NOT NULL,
  `motivo` ENUM('Entrega', 'Vencido', 'Roto', 'Otro') NOT NULL,
  `cantidad_egreso` DOUBLE NOT NULL,
  `observacion` VARCHAR(255) NULL,
  `fecha_alta` DATETIME NOT NULL,
  `usuario_alta` DATETIME NOT NULL,
  `fecha_baja` DATETIME NULL COMMENT 'solo por error de carga',
  `responsable_id_responsable` INT NOT NULL,
  `rama_id_rama` INT NOT NULL,
  PRIMARY KEY (`id_egreso_stock`),
  INDEX `fk_egreso_stock_responsable1_idx` (`responsable_id_responsable` ASC) VISIBLE,
  INDEX `fk_egreso_stock_rama1_idx` (`rama_id_rama` ASC) VISIBLE,
  CONSTRAINT `fk_egreso_stock_responsable1`
    FOREIGN KEY (`responsable_id_responsable`)
    REFERENCES `responsable` (`id_responsable`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_egreso_stock_rama1`
    FOREIGN KEY (`rama_id_rama`)
    REFERENCES `rama` (`id_rama`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stock` (
  `id_stock` INT NOT NULL,
  `fecha_stock` DATETIME NOT NULL,
  `stock_administrativo` DOUBLE NOT NULL,
  `stock_fisico` DOUBLE NOT NULL,
  `stock_minimo` DOUBLE NOT NULL,
  `fecha_actualizacion` DATETIME NOT NULL,
  `usuario_actualizacion` DATETIME NOT NULL,
  `rama_id_rama` INT NOT NULL,
  PRIMARY KEY (`id_stock`),
  INDEX `fk_stock_rama1_idx` (`rama_id_rama` ASC) VISIBLE,
  CONSTRAINT `fk_stock_rama1`
    FOREIGN KEY (`rama_id_rama`)
    REFERENCES `rama` (`id_rama`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
